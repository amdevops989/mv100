name: "Reusable CI for Service"

on:
  workflow_call:
    inputs:
      service:
        required: true
        type: string
      path:
        required: true
        type: string
      docker_repo:
        required: true
        type: string
    secrets:
      DOCKERHUB_USERNAME:
        required: true
      DOCKERHUB_TOKEN:
        required: true
      GH_PAT:
        required: true   # Personal Access Token with repo scope

jobs:
  build_and_push:
    runs-on: ubuntu-latest
    steps:
      # 1️⃣ Checkout repository (fetch all tags)
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # 2️⃣ Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # 3️⃣ Docker login
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # 4️⃣ Determine branch, SHA, and semantic version
      - name: Set Docker tags
        id: docker_tags
        run: |
          # Commit SHA
          echo "sha=${GITHUB_SHA}" >> $GITHUB_OUTPUT

          # Branch name
          BRANCH="unknown"
          if [[ "${GITHUB_REF}" == refs/heads/* ]]; then
            BRANCH="${GITHUB_REF#refs/heads/}"
          fi
          echo "branch=$BRANCH" >> $GITHUB_OUTPUT

          # Find latest semantic tag
          LAST_TAG=$(git tag --list "v*" --sort=-v:refname | head -n1)

          if [[ -z "$LAST_TAG" ]]; then
            NEW_SEMVER="v0.1.0"
          else
            IFS='.' read -r MAJOR MINOR PATCH <<< "${LAST_TAG#v}"
            PATCH=$((PATCH+1))
            NEW_SEMVER="v${MAJOR}.${MINOR}.${PATCH}"
          fi
          echo "semver=$NEW_SEMVER" >> $GITHUB_OUTPUT
          echo "New semantic version: $NEW_SEMVER"

      # 5️⃣ Build & push Docker image
      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: ${{ inputs.path }}
          file: ${{ inputs.path }}/Dockerfile
          push: true
          tags: |
            ${{ inputs.docker_repo }}:latest
            ${{ inputs.docker_repo }}:${{ steps.docker_tags.outputs.sha }}
            ${{ inputs.docker_repo }}:${{ steps.docker_tags.outputs.branch }}
            ${{ inputs.docker_repo }}:${{ steps.docker_tags.outputs.semver }}

      # 6️⃣ Push Git tag using PAT
      - name: Push Git tag using PAT
        if: always()
        run: |
          git config user.name "CI Auto Tag"
          git config user.email "ci-bot@example.com"

          git tag -a ${{ steps.docker_tags.outputs.semver }} -m "CI: Auto tag ${{ steps.docker_tags.outputs.semver }}"
          git push https://x-access-token:${{ secrets.GH_PAT }}@github.com/${{ github.repository }} ${{ steps.docker_tags.outputs.semver }}
