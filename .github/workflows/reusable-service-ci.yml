name: "Reusable CI for Service"

on:
  workflow_call:
    inputs:
      service:
        required: true
        type: string
      path:
        required: true
        type: string
      docker_repo:
        required: true
        type: string
    secrets:
      DOCKERHUB_USERNAME:
        required: true
      DOCKERHUB_TOKEN:
        required: true

jobs:
  build_and_push:
    runs-on: ubuntu-latest
    steps:
      # 1️⃣ Checkout repo
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2️⃣ Debug: service folder
      - name: Debug service folder
        run: |
          echo "Current working directory: $(pwd)"
          echo "Listing files in ${{ inputs.path }}:"
          ls -la ${{ inputs.path }}

      # 3️⃣ Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # 4️⃣ Docker login
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # 5️⃣ Set Docker tags (branch, SHA, semantic version)
      - name: Set Docker tags
        id: docker_tags
        run: |
          # Commit SHA
          echo "sha=${GITHUB_SHA}" >> $GITHUB_OUTPUT

          # Branch or release tag
          SEMVER=""
          BRANCH="unknown"

          if [[ "${GITHUB_REF}" == refs/tags/v* ]]; then
            SEMVER="${GITHUB_REF#refs/tags/}"
            BRANCH="release"
          elif [[ "${GITHUB_REF}" == refs/heads/* ]]; then
            BRANCH="${GITHUB_REF#refs/heads/}"
          fi

          echo "branch=$BRANCH" >> $GITHUB_OUTPUT
          echo "semver=$SEMVER" >> $GITHUB_OUTPUT

      # 6️⃣ Build & push Docker image (skip empty semver)
      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: ${{ inputs.path }}
          file: ${{ inputs.path }}/Dockerfile
          push: true
          tags: |
            ${{ inputs.docker_repo }}:latest
            ${{ inputs.docker_repo }}:${{ steps.docker_tags.outputs.sha }}
            ${{ inputs.docker_repo }}:${{ steps.docker_tags.outputs.branch }}
            ${{ steps.docker_tags.outputs.semver != '' && inputs.docker_repo + ':' + steps.docker_tags.outputs.semver }}
