name: "Reusable CI for Service"

on:
  workflow_call:
    inputs:
      service:
        required: true
        type: string
      path:
        required: true
        type: string
      docker_repo:
        required: true
        type: string
    secrets:
      DOCKERHUB_USERNAME:
        required: true
      DOCKERHUB_TOKEN:
        required: true
      GH_PAT:
        required: true

jobs:
  build_and_push:
    runs-on: ubuntu-latest

    steps:
      # 1Ô∏è‚É£ Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GH_PAT }}

      # 2Ô∏è‚É£ Debug info
      - name: Debug context
        run: |
          echo "üîç Service: ${{ inputs.service }}"
          echo "üìÇ Path: ${{ inputs.path }}"
          echo "üîó Branch ref: ${GITHUB_REF}"
          echo "üîó Base ref: ${GITHUB_BASE_REF}"
          echo "üíæ Commit SHA: ${GITHUB_SHA}"
          echo "üóÇÔ∏è Listing contents of ${{ inputs.path }}"
          ls -la ${{ inputs.path }}

      # 3Ô∏è‚É£ Setup Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # 4Ô∏è‚É£ Log in to Docker Hub
      - name: Docker login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # 5Ô∏è‚É£ Define Docker tags
      - name: Set version tags
        id: tags
        run: |
          echo "üß† Determining tags..."
          if [[ "${GITHUB_REF}" == refs/tags/v* ]]; then
            VERSION="${GITHUB_REF#refs/tags/}"
            BRANCH="release"
            TAG_COMBO="${BRANCH}-${VERSION}"
          elif [[ "${GITHUB_REF}" == refs/heads/* ]]; then
            BRANCH=$(echo "${GITHUB_REF#refs/heads/}" | tr '/' '-')
            VERSION="v0.0.0"
            TAG_COMBO="${BRANCH}-${VERSION}"
          else
            BRANCH="unknown"
            VERSION="v0.0.0"
            TAG_COMBO="${BRANCH}-${VERSION}"
          fi

          echo "branch=$BRANCH" >> $GITHUB_OUTPUT
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "combo=$TAG_COMBO" >> $GITHUB_OUTPUT

          echo "‚úÖ Tags prepared:"
          echo " - latest"
          echo " - $BRANCH"
          echo " - $TAG_COMBO"

      # 6Ô∏è‚É£ Build & push Docker image
      - name: Build & Push Docker image
        uses: docker/build-push-action@v6
        with:
          context: ${{ inputs.path }}
          file: ${{ inputs.path }}/Dockerfile
          push: true
          tags: |
            ${{ inputs.docker_repo }}:latest
            ${{ inputs.docker_repo }}:${{ steps.tags.outputs.branch }}
            ${{ inputs.docker_repo }}:${{ steps.tags.outputs.combo }}

      # 7Ô∏è‚É£ Optionally push semantic tag to GitHub (for release versions)
      - name: Push Git tag if semantic version
        if: startsWith(github.ref, 'refs/tags/v')
        run: |
          echo "üì¶ Pushing Git tag to repo..."
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git tag -a "${{ steps.tags.outputs.version }}" -m "Release ${{ steps.tags.outputs.version }}"
          git push origin "${{ steps.tags.outputs.version }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}
